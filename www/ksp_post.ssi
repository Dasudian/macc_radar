<html>
<head>
  <link rel="stylesheet" href="font-awesome/css/font-awesome.min.css">
  <link rel="stylesheet" href="awesome-markers/dist/leaflet.awesome-markers.css">
  <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.css" />
<!--[if lte IE 8]>
    <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.ie.css" />
    <link rel="stylesheet" href="css/font-awesome-ie7.min.css">
<![endif]-->
</head>
<title>MODUM :: KSP Demo</title>
<h1> K-Shortest path demo (Yen's algorithm) </h1>
<p> You requested a route from %oname% (%origin%) to %dname% (%destination%). The map below highlights the %k% shortests paths:</p>

<div id="map" style="width: 600px; height: 400px"></div>
<form action="" method="post" onSubmit="return kill_simulation()">
<input id="kill_sim" type="submit" value="Stop Simulation"/>
</form>
<label><input type='checkbox' onclick = 'refresh(this);'> Auto refresh intentions</label>
<div id="routeSelection"><h3>Choose which route you would like to display on the map:</h3></div>
<div id="intentions"></div>
<div id="routeList"></div>
 <script src="http://cdn.leafletjs.com/leaflet-0.5.1/leaflet.js"></script>
  <script src="awesome-markers/dist/leaflet.awesome-markers.js"></script>
  <script src="jsolait/jsolait.js"></script>
	<script>
var serviceURL = "ajax.yaws";
var methods = [ "kill_simulation" ];

var jsonrpc = imprt("jsonrpc");
var service = new jsonrpc.ServiceProxy(serviceURL, methods);

function kill_simulation() {
    try {
     document.getElementById('kill_sim').value = service.kill_simulation();
	 document.getElementById('kill_sim').disabled = 1;
     } catch(e) {
     document.getElementById('kill_sim').value = e;
	 document.getElementById('kill_sim').disabled = 1;
     }
     return false;
}

		var map = L.map('map').setView(%origin%, 15);
		
		L.Polyline.prototype.length_in_meters = function () {
			var total = 0;
			var begin = null;
			var polyline_coords = this._latlngs;
			for (var i = 0; i < polyline_coords.length - 1; i++) {
				begin = polyline_coords[i];
				total  += begin.distanceTo(polyline_coords[i + 1]);
			}
			
			total = total.toFixed();
			return total;
		}
		
		var routes = %routes%;
		var routePolys = [];
		for(var i=0; i<routes.length;i++)
			routePolys.push(createRoute(routes[i],get_random_color()));
		
		var ids = %ids%;
		var names = %names%;
		var lengths = %lengths%;
			
		for(var i=0; i<names.length;i++) {
			addRoute(ids[i], names[i],i+1, lengths[i], routePolys[i].length_in_meters());
		}
	
		for(var i = 0; i < %k%; i++)
			addCheckbox("Route "+(i+1), i); 
				
		
		
		L.tileLayer('http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png', {
			maxZoom: 18,
			attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="http://cloudmade.com">CloudMade</a>'
		}).addTo(map);
		
		var startMarker = L.AwesomeMarkers.icon({
		  icon: 'home', 
		  color: 'green'
		})
		
		var finishMarker = L.AwesomeMarkers.icon({
		  icon: 'flag', 
		  color: 'red'
		})

		L.marker(%origin%, {icon: startMarker}).addTo(map).bindPopup("%oname%").openPopup();
		L.marker(%destination%, {icon: finishMarker}).addTo(map).bindPopup("%dname%");
		
		function get_random_color() {
			var letters = '0123456789ABCDEF'.split('');
			var color = '#';
			for (var i = 0; i < 6; i++ ) {
				color += letters[Math.round(Math.random() * 15)];
			}
			return color;
		}
		
		var popup = L.popup();
		
		function onMapClick(e) {
			popup
				.setLatLng(e.latlng)
				.setContent("You clicked the map at " + e.latlng.toString())
				.openOn(map);
		}
		
		map.on('click', onMapClick);
		
		function createRoute(latlon, color) {
                var point, route, points = [];
                for (var i=0; i< latlon.length; i++)
                {
					if(latlon[i][0] != "undefined" && latlon[i][1] != "undefined") {
						point = new L.LatLng(latlon[i][0] , latlon[i][1]);
						points.push(point);
					}
                }
                route= new L.Polyline(points, {
                    weight: 3,
                    opacity: 0.5,
                    smoothFactor: 1,
					color: color
                }).addTo(map);
                route.bringToFront();
				// zoom the map to the polyline
				map.fitBounds(route.getBounds());
				
				return route;
            }
				
		function addCheckbox(name, value) {
			// create the necessary elements
			var label= document.createElement("label");
			var description = document.createTextNode(name);
			var checkbox = document.createElement("input");
			checkbox.onclick = function() { displayRoute(checkbox); };
			checkbox.type = "checkbox";    // make the element a checkbox
			checkbox.name = name;      // give it a name we can check on the server side
			checkbox.value = value;
			checkbox.checked = true;

			label.appendChild(checkbox);   // add the box to the element
			label.appendChild(description);// add the description to the element
			
			// add the label element to your div
			document.getElementById('routeSelection').appendChild(label);
			
		}
		
		function displayRoute(cb) {
			if(cb.checked) // show route
				routePolys[cb.value].setStyle({opacity: 1})
			else
				routePolys[cb.value].setStyle({opacity: 0})
		}
		
		function addRoute(idlist, streetnames, route_number, length, distance) {
			var form = document.createElement("form");
			form.action = "status_post.yaws";
			form.method="POST";
			form.id="route_form"+route_number;
			form.name="route_form"+route_number;
			var header = document.createElement("h4");
			var headerText = document.createTextNode("Route " + route_number + " (" + length + " / " + distance + "m):");
			header.appendChild(headerText);
			var route = document.createElement("label");
			var input = document.createElement("input");
			input.type = "hidden";
			input.name = "link";
			route.appendChild(input);
			for(var i=0; i<streetnames.length-1; i++) {
				var link= document.createElement("a");
				var linkText = document.createTextNode(streetnames[i]);
				link.appendChild(linkText);
				link.href = "javascript:getstatus('" + form.name + "', '"+idlist[i]+ "')";
				var arrow = document.createTextNode(" --> ");
				route.appendChild(link);
				route.appendChild(arrow);
			}
			var last = document.createElement("a");
			var lastText = document.createTextNode(streetnames[streetnames.length-1]);
			last.appendChild(lastText);
			last.href = "javascript:getstatus('" + form.name + "', '"+idlist[streetnames.length-1]+ "')";
			route.appendChild(last);
			
			form.appendChild(header);
			form.appendChild(route);
			document.getElementById('routeList').appendChild(form);
		}
		
		function getstatus (formType, linkType )
		{
			document.getElementById(formType).link.value = linkType ;
			document.getElementById(formType).submit() ;
		}
		
		//Server side events for traffic density estimation
    var refresh_source = "";
	
	function refresh(cb) {
		if(cb.checked) {
			refresh_source = new EventSource("/intentions/%paths%");
			refresh_source.onmessage = function(event) {
				var d = window.atob(event.data);
				var intentions = eval(d);
				alert(intentions);
				for(var i=0; i<intentions.length;i++) {
					var rNr = i+1;
					var intPerc = intentions[i]*100;
					var rText = document.createTextNode("Route " + rNr + ":" + intPerc + "/100");
					document.getElementById('intentions').appendChild(rText);
				}
			};
		}
		else {
			refresh_source.close();
		}
	};
</script>
	</script>

</html>